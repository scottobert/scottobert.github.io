<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Version Control on Scott Obert</title><link>https://scottobert.github.io/categories/version-control/</link><description>Recent content in Version Control on Scott Obert</description><generator>Hugo</generator><language>en</language><copyright>&amp;copy;2022 Scott Obert</copyright><lastBuildDate>Thu, 21 Apr 2022 09:50:32 -0700</lastBuildDate><atom:link href="https://scottobert.github.io/categories/version-control/index.xml" rel="self" type="application/rss+xml"/><item><title>git reset to a given commit</title><link>https://scottobert.github.io/posts/git-reset-to-commit/</link><pubDate>Thu, 21 Apr 2022 09:50:32 -0700</pubDate><guid>https://scottobert.github.io/posts/git-reset-to-commit/</guid><description>&lt;h1 id="safely-resetting-to-a-previous-commit-in-git">Safely Resetting to a Previous Commit in Git&lt;/h1>
&lt;p>When working with Git, sometimes you need to reset your working tree to a specific commit while preserving the commit history. This guide explains how to do this safely and understand what&amp;rsquo;s happening behind the scenes.&lt;/p>
&lt;h2 id="the-problem">The Problem&lt;/h2>
&lt;p>Typically, when developers want to revert to an older commit, they might reach for &lt;code>git reset --hard&lt;/code>. However, this can be dangerous as it:&lt;/p></description></item></channel></rss>
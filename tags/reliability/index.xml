<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reliability on Scott Obert</title><link>https://scottobert.github.io/tags/reliability/</link><description>Recent content in Reliability on Scott Obert</description><generator>Hugo</generator><language>en</language><copyright>&amp;copy;2022 Scott Obert</copyright><lastBuildDate>Sun, 28 Feb 2021 09:00:00 -0500</lastBuildDate><atom:link href="https://scottobert.github.io/tags/reliability/index.xml" rel="self" type="application/rss+xml"/><item><title>Resilience Engineering: Building Fault-Tolerant Systems</title><link>https://scottobert.github.io/posts/resilience-engineering-building-fault-tolerant-systems/</link><pubDate>Sun, 28 Feb 2021 09:00:00 -0500</pubDate><guid>https://scottobert.github.io/posts/resilience-engineering-building-fault-tolerant-systems/</guid><description>&lt;p>Resilience engineering represents a paradigm shift from trying to prevent all failures to designing systems that gracefully adapt and recover when failures inevitably occur. Traditional approaches focused on eliminating failure modes through redundancy and robust design, but complex distributed systems exhibit emergent behaviors that cannot be fully predicted or prevented. Instead, resilient systems embrace failure as a normal operating condition and build adaptive capabilities that maintain essential functions even under adverse conditions.&lt;/p></description></item></channel></rss>